{
  "name": "download",
  "version": "4.4.3",
  "description": "Download and extract files",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/kevva/download"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "download",
    "extract",
    "http",
    "request",
    "url"
  ],
  "dependencies": {
    "caw": "^1.0.1",
    "concat-stream": "^1.4.7",
    "each-async": "^1.0.0",
    "filenamify": "^1.0.1",
    "got": "^5.0.0",
    "gulp-decompress": "^1.2.0",
    "gulp-rename": "^1.2.0",
    "is-url": "^1.2.0",
    "object-assign": "^4.0.1",
    "read-all-stream": "^3.0.0",
    "readable-stream": "^2.0.2",
    "stream-combiner2": "^1.1.1",
    "vinyl": "^1.0.0",
    "vinyl-fs": "^2.2.0",
    "ware": "^1.2.0"
  },
  "devDependencies": {
    "ava": "*",
    "nock": "^3.1.0",
    "rimraf": "^2.2.8",
    "xo": "*"
  },
  "readme": "# download [![Build Status](https://travis-ci.org/kevva/download.svg?branch=master)](https://travis-ci.org/kevva/download)\n\n> Download and extract files\n\n*See [download-cli](https://github.com/kevva/download-cli) for the command-line version.*\n\n\n## Install\n\n```\n$ npm install --save download\n```\n\n\n## Usage\n\nIf you're fetching an archive you can set `extract: true` in options and\nit'll extract it for you.\n\n```js\nvar Download = require('download');\n\nnew Download({mode: '755'})\n    .get('http://example.com/foo.zip')\n    .get('http://example.com/cat.jpg')\n    .dest('dest')\n    .run();\n```\n\n\n## API\n\n### new Download(options)\n\nCreates a new `Download` instance.\n\n#### options\n\nType: `object`\n\nOptions for [`got`](https://github.com/sindresorhus/got) or the underlying [`http`](https://nodejs.org/api/http.html#http_http_request_options_callback)/[`https`](https://nodejs.org/api/https.html#https_https_request_options_callback) request can be specified,\nas well as options specific to the `download` module as described below.\n\n##### options.extract\n\nType: `boolean`  \nDefault: `false`\n\nIf set to `true`, try extracting the file using [decompress](https://github.com/kevva/decompress/).\n\n##### options.mode\n\nType: `string`\n\nSet mode on the downloaded file, i.e `{mode: '755'}`.\n\n##### options.strip\n\nType: `number`  \nDefault: `0`\n\nRemove leading directory components from extracted files.\n\n### .get(url, [dest])\n\n#### url\n\nType: `string`\n\nAdd a URL to download.\n\n#### dest\n\nType: `string`\n\nSet an optional destination folder that will take precedence over the one set in \n`.dest()`.\n\n### .dest(dir)\n\n#### dir\n\nType: `string`\n\nSet the destination folder to where your files will be downloaded.\n\n### .rename(name)\n\n#### name\n\nType: `function` or `string`\n\nRename your files using [gulp-rename](https://github.com/hparra/gulp-rename).\n\n### .use(plugin)\n\n#### plugin(response, url)\n\nType: `function`\n\nAdd a plugin to the middleware stack.\n\n##### response\n\nThe [response object](http://nodejs.org/api/http.html#http_http_incomingmessage).\n\n##### url\n\nThe requested URL.\n\n### .run(callback)\n\n#### callback(err, files)\n\nType: `function`\n\n##### files\n\nContains an array of vinyl files.\n\n\n## License\n\nMIT © [Kevin Mårtensson](http://github.com/kevva)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/kevva/download/issues"
  },
  "homepage": "https://github.com/kevva/download",
  "_id": "download@4.4.3",
  "_from": "download@>=4.1.2 <5.0.0"
}
